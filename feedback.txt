
**Improvements**



dal package: Did you mean “dao” (Data Access Object)? You should not mix DAO
and Repositories. Although similar things, they represent different concepts.
DAO is a Core J2EE Pattern and Repository is a DDD building block, which treat
entities/aggregates as a collection. Subtle but different.


In a DAO you would have “create”, “read”, “delete”, etc.

In a Repository you would have “add”, “find”, “remove”.



**Consideration**

It’s clear that James has a good experience with Cucumber and Acceptance Tests
but I think that if he had more unit tests, the overall design would have been
improved. Looking at the code, I can clearly see that James is a very confident
developer. Design-wise, I think that there is room for improvement. Also, I
believe that the bug in the wall feature was a consequence of lack of tests and
how the data was “stored”—too many pieces in there. I could find some Ruby
influence in his code, which is not a bad thing. However, in this case, it led
him to use type casting and “instanceof” instead of a better use of OO. Probably
because in Ruby, as it is a dynamic language, he wouldn’t need to do any of that.
He would just invoke the method and that would work. My recommendation to James
is to try to get a deeper knowledge of design patterns, DDD, and OCP (SOLID),
and also to use more unit tests as well.